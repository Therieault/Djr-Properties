'use strict';
module.exports = (sequelize, DataTypes) => {
  var new_application = sequelize.define('new_application', {
    firstName: DataTypes.STRING,
    middleName: DataTypes.STRING,
    lastName: DataTypes.STRING,
    socialSecurityNumber: DataTypes.STRING,
    dateOfBirth: DataTypes.STRING,
    maritalStatus: DataTypes.STRING,
    licenseNumber: DataTypes.STRING,
    licenseState: DataTypes.STRING,
    phoneNumber: DataTypes.STRING,
    secondaryPhoneNumber: DataTypes.STRING,
    email: DataTypes.STRING,
    currentHomeAddress: DataTypes.STRING,
    currentCity: DataTypes.STRING,
    currentState: DataTypes.STRING,
    currentZip: DataTypes.STRING,
    timeAtCurrentAddress: DataTypes.STRING,
    currentLandlord: DataTypes.STRING,
    currentLandlordPhone: DataTypes.STRING,
    currentReasonForLeaving: DataTypes.STRING,
    currentRent: DataTypes.STRING,
    currentRentUpToDate: DataTypes.STRING,
    previousHomeAddress: DataTypes.STRING,
    previousCity: DataTypes.STRING,
    previousState: DataTypes.STRING,
    previousZip: DataTypes.STRING,
    previousLandlord: DataTypes.STRING,
    previousLandlordPhone: DataTypes.STRING,
    previousReasonForLeaving: DataTypes.STRING,
    previousRent: DataTypes.STRING,
    previousRentUpToDate: DataTypes.STRING,
    priorHomeAddress: DataTypes.STRING,
    priorCity: DataTypes.STRING,
    priorState: DataTypes.STRING,
    priorZip: DataTypes.STRING,
    priorLandlord: DataTypes.STRING,
    priorLandlordPhone: DataTypes.STRING,
    priorReasonForLeaving: DataTypes.STRING,
    priorRent: DataTypes.STRING,
    priorRentUpToDate: DataTypes.STRING,
    occupantName: DataTypes.STRING,
    occupantRelationship: DataTypes.STRING,
    occupantOccupation: DataTypes.STRING,
    occupantAge: DataTypes.STRING,
    secondOccupantName: DataTypes.STRING,
    secondOccupantRelationship: DataTypes.STRING,
    secondOccupantJob: DataTypes.STRING,
    secondOccupantAge: DataTypes.STRING,
    thirdOccupantName: DataTypes.STRING,
    thirdOccupantRelationship: DataTypes.STRING,
    thirdOccupantJob: DataTypes.STRING,
    thirdOccupantAge: DataTypes.STRING,
    fourthOccupantName: DataTypes.STRING,
    fourthOccupantRelationship: DataTypes.STRING,
    fourthOccupantJob: DataTypes.STRING,
    fourthOccupantAge: DataTypes.STRING,
    fifthOccupantName: DataTypes.STRING,
    fifthOccupantRelationship: DataTypes.STRING,
    fifthOccupantJob: DataTypes.STRING,
    fifthOccupantAge: DataTypes.STRING,
    carYear: DataTypes.STRING,
    carMake: DataTypes.STRING,
    carModel: DataTypes.STRING,
    carColor: DataTypes.STRING,
    carLicensePlate: DataTypes.STRING,
    carState: DataTypes.STRING,
    secondCarYear: DataTypes.STRING,
    secondCarMake: DataTypes.STRING,
    secondCarModel: DataTypes.STRING,
    secondCarColor: DataTypes.STRING,
    secondCarLicensePlate: DataTypes.STRING,
    secondCarState: DataTypes.STRING,
    currentEmployer: DataTypes.STRING,
    occupation: DataTypes.STRING,
    hoursPerWeek: DataTypes.STRING,
    supervisor: DataTypes.STRING,
    supervisorPhone: DataTypes.STRING,
    yearsEmployed: DataTypes.STRING,
    employerAddress: DataTypes.STRING,
    employerCity: DataTypes.STRING,
    employerState: DataTypes.STRING,
    employerZip: DataTypes.STRING,
    secondaryEmployer: DataTypes.STRING,
    secondaryOccupation: DataTypes.STRING,
    secondaryHoursPerWeek: DataTypes.STRING,
    secondarySupervisor: DataTypes.STRING,
    secondarySupervisorPhone: DataTypes.STRING,
    secondaryYearsEmployed: DataTypes.STRING,
    secondaryEmployerAddress: DataTypes.STRING,
    secondaryEmployerCity: DataTypes.STRING,
    secondaryEmployerState: DataTypes.STRING,
    secondaryEmployerZip: DataTypes.STRING,
    income: DataTypes.STRING,
    incomeUnit: DataTypes.STRING,
    incomeSource: DataTypes.STRING,
    proofOfIncome: DataTypes.STRING,
    secondaryIncome: DataTypes.STRING,
    secondaryIncomeUnit: DataTypes.STRING,
    secondaryIncomeSource: DataTypes.STRING,
    proofOfSecondaryIncome: DataTypes.STRING,
    tertiaryIncome: DataTypes.STRING,
    tertiaryIncomeUnit: DataTypes.STRING,
    tertiaryIncomeSource: DataTypes.STRING,
    proofOfTertiaryIncome: DataTypes.STRING,
    carLoanHolder: DataTypes.STRING,
    carLoanBalanceOwed: DataTypes.STRING,
    carLoanMonthlyPayment: DataTypes.STRING,
    carLoanCreditorPhone: DataTypes.STRING,
    creditCardCompany: DataTypes.STRING,
    creditCardBalance: DataTypes.STRING,
    creditCardMonthlyPayment: DataTypes.STRING,
    creditCardPhone: DataTypes.STRING,
    secondCreditCardCompany: DataTypes.STRING,
    secondCreditCardBalance: DataTypes.STRING,
    secondCreditCardMonthlyPayment: DataTypes.STRING,
    secondCreditCardPhone: DataTypes.STRING,
    thirdCreditCardCompany: DataTypes.STRING,
    thirdCreditCardBalance: DataTypes.STRING,
    thirdCreditCardMonthlyPayment: DataTypes.STRING,
    thirdCreditCardPhone: DataTypes.STRING,
    otherCreditOwed: DataTypes.STRING,
    otherCreditBalance: DataTypes.STRING,
    otherCreditMonthlyPayment: DataTypes.STRING,
    otherCreditPhone: DataTypes.STRING,
    emergencyContact: DataTypes.STRING,
    emergencyContactPhone: DataTypes.STRING,
    emergencyContactSecondaryPhone: DataTypes.STRING,
    emergencyContactRelation: DataTypes.STRING,
    emergencyContactAddress: DataTypes.STRING,
    emergencyContactCity: DataTypes.STRING,
    emergencyContactState: DataTypes.STRING,
    emergencyContactZip: DataTypes.STRING,
    secondEmergencyContact: DataTypes.STRING,
    secondEmergencyContactPhone: DataTypes.STRING,
    secondEmergencyContactSecondaryPhone: DataTypes.STRING,
    secondEmergencyContactRelation: DataTypes.STRING,
    secondEmergencyContactAddress: DataTypes.STRING,
    secondEmergencyContactCity: DataTypes.STRING,
    secondEmergencyContactState: DataTypes.STRING,
    secondEmergencyContactZip: DataTypes.STRING,
    personalReference: DataTypes.STRING,
    personalReferencePhone: DataTypes.STRING,
    personalReferenceSecondaryPhone: DataTypes.STRING,
    personalReferenceRelation: DataTypes.STRING,
    personalReferenceAddress: DataTypes.STRING,
    personalReferenceCity: DataTypes.STRING,
    personalReferenceState: DataTypes.STRING,
    personalReferenceZip: DataTypes.STRING,
    secondPersonalReference: DataTypes.STRING,
    secondPersonalReferencePhone: DataTypes.STRING,
    secondPersonalReferenceSecondaryPhone: DataTypes.STRING,
    secondPersonalReferenceRelation: DataTypes.STRING,
    secondPersonalReferenceAddress: DataTypes.STRING,
    secondPersonalReferenceCity: DataTypes.STRING,
    secondPersonalReferenceState: DataTypes.STRING,
    secondPersonalReferenceZip: DataTypes.STRING,
    sued: DataTypes.STRING,
    lockedOut: DataTypes.STRING,
    bankrupt: DataTypes.STRING,
    broughtToCourt: DataTypes.STRING,
    guiltyOfFelony: DataTypes.STRING,
    movedOwingRent: DataTypes.STRING,
    damagedApartment: DataTypes.STRING,
    brokenALease: DataTypes.STRING,
    amountAvailable: DataTypes.STRING,
    additionalNotes: DataTypes.STRING
  }, {});
  new_application.associate = function(models) {
    // associations can be defined here
  };
  return new_application;
};